version: "3.8"

services:
  # ======================
  # Elasticsearch
  # ======================
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - ELASTIC_PASSWORD=changeme                   # password for 'elastic' user
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-u", "elastic:changeme", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 60s

  # ======================
  # Kibana
  # ======================
  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system            # Added username
      - ELASTICSEARCH_PASSWORD=changeme                  # Added password, same as ELASTIC_PASSWORD or the kibana_system password if you set it differently
      - SERVER_HOST=0.0.0.0
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy

  # ======================
  # Logstash
  # ======================
  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.2
    container_name: logstash
    environment:
      - LS_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=changeme
    ports:
      - "5000:5000"
      - "5044:5044"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      elasticsearch:
        condition: service_healthy

  # ======================
  # Prometheus
  # ======================
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - node_exporter
      - alertmanager

  # ======================
  # Grafana
  # ======================
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    depends_on:
      - prometheus

  # ======================
  # Node Exporter
  # ======================
  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    ports:
      - "9100:9100"

  # ======================
  # Alertmanager
  # ======================
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
  
   # ====================
   # Portainer
   # ====================
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    ports:
      - "8000:8000"   # Edge agent (optional)
      - "9443:9443"   # HTTPS (default UI port)
      - "9000:9000"   # HTTP (optional)
    volumes:
    #  - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  elasticsearch_data:
  grafana_data:
  portainer_data:
